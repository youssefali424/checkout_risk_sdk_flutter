group = "com.youssefali.checkout_risk_sdk"
version = "1.0-SNAPSHOT"

buildscript {
    ext {
        agp_version = '8.3.1'
    }
    ext.kotlin_version = "1.9.20"
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url = uri("https://maven.fpregistry.io/releases") }
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$agp_version"
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.youssefali.checkout_risk_sdk"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.checkout:checkout-risk-sdk-android:2.0.0'
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.4")
}